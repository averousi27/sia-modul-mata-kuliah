package com.AIS.Modul.MataKuliah.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import com.AIS.Modul.MataKuliah.Model.Kurikulum;
import com.AIS.Modul.MataKuliah.Repository.KurikulumRepository;
import com.AIS.Modul.MataKuliah.Service.KurikulumService;
import com.its.sia.model.ThnAjaran;
import com.its.sia.service.Datatable;
import com.its.sia.service.DatatableExtractParams;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

@Service
public class KurikulumServiceImpl implements KurikulumService {

	private String[] column = {"idThnAjaran","thnThnAjaran","persenHadirMinimPd","persenMinimPertemuan","aThnAjaranTerhapus"};
	private Boolean[] searchable = {false,true,true,true,false};
	
	@Autowired
	private KurikulumRepository kurikulumRepo;
	
	@Autowired
	private SatManService satManServ;
	
	
	@Override
	public List<Kurikulum> findAll() {
		return kurikulumRepo.findAll();
	}

	@Override
	public Kurikulum findById(UUID idKurikulum) {
		return kurikulumRepo.findById(idKurikulum);
	
	}

	@Override
	public void editKurikulum(Kurikulum kurikulum, UUID idKurikulum) {
		kurikulumRepo.editKurikulum(kurikulum, idKurikulum);
		
	}

	@Override
	public void addKurikulum(Kurikulum kurikulum) {
		kurikulumRepo.addKurikulum(kurikulum);
		
	}

	@Override
	public boolean addKurikulumAction(UUID idSatMan, String nmKurikulum,
			String thnMulai, String thnAkhir, Boolean aStatusKurikulum) {
		if(idSatMan != null && thnMulai != null 
				&& thnAkhir != null && aStatusKurikulum != null){
			Kurikulum kurikulum = new Kurikulum();
			//kurikulum.setIdKurikulum(UUID.randomUUID());
			kurikulum.setSatMan(satManServ.findById(idSatMan));
			kurikulum.setNmKurikulum(nmKurikulum);
			kurikulum.setThnMulai(thnMulai);
			kurikulum.setThnAkhir(thnAkhir);
			kurikulum.setaStatusKurikulum(aStatusKurikulum);
			
			this.addKurikulum(kurikulum);
			return true;
		}
		return false;
	}

	@Override
	public boolean editKurikulumAction(UUID idKurikulum, UUID idSatMan, String nmKurikulum, 
			String thnMulai,String thnAkhir, Boolean aStatusKurikulum) {
		if(idSatMan != null && thnMulai != null 
				&& thnAkhir != null && aStatusKurikulum != null){
			Kurikulum kurikulum = kurikulumRepo.findById(idKurikulum);
			kurikulum.setNmKurikulum(nmKurikulum);
			kurikulum.setSatMan(satManServ.findById(idSatMan));
			kurikulum.setThnMulai(thnMulai);
			kurikulum.setThnAkhir(thnAkhir);
			kurikulum.setaStatusKurikulum(aStatusKurikulum);
			this.editKurikulum(kurikulum, idKurikulum);
			
			return true;
		}
		return false;
	}

	@Override
	public UUID convertToUUID(String source) {
		return UUID.fromString(source);
	}

	@Override
	public void activateKurikulum(UUID idKurikulum) {
		Kurikulum kurikulum = kurikulumRepo.findById(idKurikulum);
		kurikulum.setNmKurikulum(kurikulum.getNmKurikulum());
		kurikulum.setThnMulai(kurikulum.getThnMulai());
		kurikulum.setThnAkhir(kurikulum.getThnAkhir());
		kurikulum.setaStatusKurikulum(true);
		this.editKurikulum(kurikulum, idKurikulum);
	}

	@Override
	public void deleteKurikulum(UUID idKurikulum) {
		Kurikulum kurikulum = kurikulumRepo.findById(idKurikulum);
		kurikulum.setNmKurikulum(kurikulum.getNmKurikulum());
		kurikulum.setThnMulai(kurikulum.getThnMulai());
		kurikulum.setThnAkhir(kurikulum.getThnAkhir());
		kurikulum.setaStatusKurikulum(false);
		this.editKurikulum(kurikulum, idKurikulum);
	}

	@Override
	public Datatable getdatatable(String sEcho, int iDisplayLength,
			int iDisplayStart, int iSortCol_0, String sSortDir_0,
			String sSearch, String filter) {
		// TODO Auto-generated method stub
		DatatableExtractParams parameter = new DatatableExtractParams(sSearch, this.column, this.searchable, iSortCol_0, sSortDir_0);
		Datatable thnAjaranDatatable= new Datatable();
		thnAjaranDatatable.setsEcho(sEcho);
		String dbFilter = "";
		if(filter != null && !filter.equals("")) dbFilter+=" AND "+filter; 
		List<ThnAjaran> queryResult = get("("+parameter.getWhere()+")"+dbFilter, parameter.getOrder(), iDisplayLength, iDisplayStart);
		List<String[]> aData = new ArrayList<String[]>();
		for (ThnAjaran thnAjaran : queryResult) {
			String[] thnAjaranString = new String[6];
			thnAjaranString[0] = thnAjaran.getIdThnAjaran().toString();
			thnAjaranString[1] = String.valueOf(thnAjaran.getThnThnAjaran());
			thnAjaranString[2] = String.valueOf(thnAjaran.getPersenHadirMinimPd());
			thnAjaranString[3] = String.valueOf(thnAjaran.getPersenMinimPertemuan());
			thnAjaranString[4] = String.valueOf(thnAjaran.isaThnAjaranTerhapus());
			thnAjaranString[5] = String.valueOf(thnAjaran.isaThnAjaranTerhapus());
			aData.add(thnAjaranString);
		}
		thnAjaranDatatable.setAaData(aData);
		thnAjaranDatatable.setiTotalRecords(thnAjaranRepository.count(""));
		thnAjaranDatatable.setiTotalDisplayRecords(thnAjaranRepository.count("("+parameter.getWhere()+") AND "+filter));

		return thnAjaranDatatable;
	}
	
	
}
