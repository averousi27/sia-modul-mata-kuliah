package com.AIS.Modul.MataKuliah.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.AIS.Modul.MataKuliah.Repository.SubCapPembRepository;
import com.sia.main.domain.CapPemb;
import com.sia.main.domain.SubCapPemb;

@Service
public class SubCapPembServiceImpl implements SubCapPembService {

	@Autowired
	private SubCapPembRepository subCapPembRepo;
	
	@Override
	public CapPemb findParent(CapPemb childSubCapPemb) {
		// TODO Auto-generated method stub
		UUID idCapPemb = childSubCapPemb.getIdCapPemb();
		return subCapPembRepo.findParent(idCapPemb);
	}

	private String [] column = {"cp.idCapPemb","kur.thnMulai", "kur.namaKurikulum", "satman.nmSatMan","cp.namaCapPemb", 
			"cp.namaCapPemb", "cp.deskripsiCapPemb"};
	private Boolean[] searchable = {false,true,true,true,false,true,true,false}; 
	
	@Override
	public Datatable getdatatable(String sEcho, int iDisplayLength,
			int iDisplayStart, int iSortCol_0, String sSortDir_0,
			String sSearch, String string) {
		// TODO Auto-generated method stub
		DatatableExtractParams parameter = new DatatableExtractParams(sSearch, this.column, this.searchable, iSortCol_0, sSortDir_0);
		Datatable capPembDatatable= new Datatable();
		capPembDatatable.setsEcho(sEcho);
		String dbFilter = ""; 
		List<SubCapPemb> queryResult = get("("+parameter.getWhere()+")"+dbFilter, parameter.getOrder(), iDisplayLength, iDisplayStart);
		List<String[]> aData = new ArrayList<String[]>();
		for (SubCapPemb subCapPemb : queryResult) {
			String[] capPembString = new String[9]; 
			capPembString[0] = subCapPemb.getIdSubCapPemb().getIdCapPemb().toString();
			capPembString[1] = String.valueOf(capPemb.getKurikulum().getThnMulai());
			capPembString[2] = String.valueOf(capPemb.getKurikulum().getNamaKurikulum());
			capPembString[3] = String.valueOf(capPemb.getSatMan().getNmSatMan());
			if(parentCapPemb!=null){ 
				capPembString[4] = String.valueOf(parentCapPemb.getNamaCapPemb());//disini harusnya capaian induk
			}
			capPembString[5] = String.valueOf(capPemb.getNamaCapPemb());
			capPembString[6] = String.valueOf(capPemb.getDeskripsiCapPemb());
			capPembString[7] = String.valueOf(capPemb.isStatusHapusCapPemb());
			capPembString[8] = String.valueOf(capPemb.isStatusHapusCapPemb());
			aData.add(capPembString);
		}
		capPembDatatable.setAaData(aData);
		capPembDatatable.setiTotalRecords(capPembRepo.count(""));
		capPembDatatable.setiTotalDisplayRecords(capPembRepo.count("("+parameter.getWhere()+") AND "+filter));

		return capPembDatatable;
	}

	public List<SubCapPemb> get(String string, String order,
			int iDisplayLength, int iDisplayStart) {
		// TODO Auto-generated method stub
		return null;
	}

}
