package com.AIS.Modul.MataKuliah.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.AIS.Modul.MataKuliah.Repository.SatManMKRepository;
import com.sia.main.domain.MK;
import com.sia.main.domain.PrasyaratMK;
import com.sia.main.domain.SatMan;
import com.sia.main.domain.SatManMK;

@Service
public class SatManMKServiceImpl implements SatManMKService {
	
	@Autowired
	private MKService mkServ;
	
	@Autowired
	private SatManService satManServ;
	
	@Autowired
	private SatManMKRepository satManMKRepo;

	private String [] column = {"pMK.idPrasyaratMK","child.kodeMK", "child.namaMK", "parent.kodeMK", "parent.namaMK", "pMK.statusHapusPrasyarat"};
	private Boolean[] searchable = {false,true,true,true,true,false};
	
	@Override
	public String save(SatManMK satManMK) {
		// TODO Auto-generated method stub
		if(satManMK.getIdSatManMK()!= null)
		{
			//update
			
			satManMKRepo.update(satManMK);
			return satManMK.getIdSatManMK().toString();
		}
		else
		{
			//insert
//	        kurikulum.setaStatusKurikulum(true);
			return satManMKRepo.insert(satManMK).toString();
		}
	}

	@Override
	public SatManMK findById(UUID idSatManMK) {
		// TODO Auto-generated method stub
		return satManMKRepo.findById(idSatManMK);
	}

	@Override
	public String delete(UUID idSatManMK) {
		// TODO Auto-generated method stub
		SatManMK satManMK = satManMKRepo.findById(idSatManMK);
		if(satManMK==null) return null;
		else{
			satManMK.setStatusHapusSatManMK(true);
			satManMKRepo.update(satManMK);
			return "Ok";
		}
	}

	@Override
	public Datatable getdatatable(String sEcho, int iDisplayLength,
			int iDisplayStart, int iSortCol_0, String sSortDir_0,
			String sSearch, String filter) {
		// TODO Auto-generated method stub
		DatatableExtractParams parameter = new DatatableExtractParams(sSearch, this.column, this.searchable, iSortCol_0, sSortDir_0);
		Datatable satManMKDatatable= new Datatable();
		satManMKDatatable.setsEcho(sEcho);
		String dbFilter = "";
		if(filter != null && !filter.equals("")) dbFilter+=" AND "+filter; 
		List<SatManMK> queryResult = get("("+parameter.getWhere()+")"+dbFilter, parameter.getOrder(), iDisplayLength, iDisplayStart);
		List<String[]> aData = new ArrayList<String[]>();
		for (SatManMK satManMK : queryResult) {
			String[] satManMKString = new String[7];
			satManMKString[0] = satManMK.getIdSatManMK().toString();
			satManMKString[1] = String.valueOf(satManMK.getChildMK().getKodeMK());
			satManMKString[2] = String.valueOf(prasyaratMK.getChildMK().getNamaMK());
			satManMKString[3] = String.valueOf(prasyaratMK.getParentMK().getKodeMK());
			satManMKString[4] = String.valueOf(prasyaratMK.getParentMK().getNamaMK());
			satManMKString[5] = String.valueOf(prasyaratMK.getStatusHapusPrasyarat());
			satManMKString[6] = String.valueOf(prasyaratMK.getStatusHapusPrasyarat());
			aData.add(prasyaratMKString);
		}
		prasyaratMKDatatable.setAaData(aData);
		prasyaratMKDatatable.setiTotalRecords(satManMKRepo.count(""));
		prasyaratMKDatatable.setiTotalDisplayRecords(satManMKRepo.count("("+parameter.getWhere()+") AND "+filter));

		return prasyaratMKDatatable;
	}

	private List<SatManMK> get(String string, String order,
			int iDisplayLength, int iDisplayStart) {
		// TODO Auto-generated method stub
		return null;
	}
	
}
